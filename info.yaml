--- 
# Tiny Tapeout project information
project:
  wokwi_id:    377426511818305537        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
#  source_files:        
#    - counter.v
#    - decoder.v
#  top_module:  "tt_um_example"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 1

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Ivan M Bow"      # Your name
  title:        "Chipper"      # Project title
  language:     "Wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Configureable PRN sequence generator"      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      This design has the following features:
        - Clock Divider (/1, /2, /4, /8, /16, /32, /64)
        - 4 Registers which control the PRN.
          - Address 0: Address of register to configure
          - Address 1: Clock Divider (bits 0-2, rest don't care)
          - Address 2: Bits to enable
            - This allows for any number of bits, from PRN 2 up to PRN 16.
          - Address 3: Polynomial
            - The value in this register is the polynomial for the PRN.
        - SPI Interface
          - CLK, MOSI, CS
          - First chip select down gives the address of the next register write.
          - Second chip select down gives the data for the register.
          - Address storage resets after second chip select up.
            - There is no safety mechanism for if the SPI gets out of sync...
        - Reset_N
        - PRN sequence generator.
        - Has a fail safe all 0's check to ensure the PRN generator does not get locked up.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
     The SPI interface is used to setup the PRN generator.
     CS up / RST_N / CS down / 2-bit address (written as a byte) / CS up / CS down / Data / CS up

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - SPI Chip Select
    - SPI Clock
    - SPI Data (MOSI)
    - none
    - none
    - none
    - none
    - none
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - PRN Binary Sequence
    - none
    - none
    - none
    - none
    - none
    - none
    - none
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - none
    - none
    - none
    - none
    - none
    - none
    - none
    - none

# The following fields are optional
  tag:          "prn, spi"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  "Breakout board to connect an external microcontroller / device. "      # Describe any external hardware needed
  discord:      "wulfhednar"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     "I plan on using an external source for testing multiple frequency inputs."       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
